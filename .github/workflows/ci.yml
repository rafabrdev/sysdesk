# ci_T0.004.yml
# Main CI workflow for Sysdesk - Sprint 0 Task T0.004
# Runs lint, test, and build on push and pull requests

name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'sprint/**'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # ================================
  # Lint Job
  # ================================
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run ESLint
        run: pnpm lint

      - name: 💅 Check Prettier formatting
        run: pnpm format:check || true

  # ================================
  # Test Job
  # ================================
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint

    strategy:
      matrix:
        node-version: ['18', '20', '22']

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run unit tests
        run: pnpm test --if-present

      - name: 📊 Upload coverage reports
        if: matrix.node-version == '20'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  # ================================
  # Build Job
  # ================================
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build Frontend
        run: |
          cd frontend
          pnpm build

      - name: 🏗️ Build Backend
        run: |
          cd backend
          pnpm build

      - name: 🏗️ Generate Prisma Client
        run: |
          cd database
          pnpm db:generate

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            frontend/.next
            frontend/out
            backend/dist
            database/generated
          retention-days: 7

  # ================================
  # Type Check Job
  # ================================
  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: lint

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Check TypeScript Frontend
        run: |
          cd frontend
          npx tsc --noEmit

      - name: 🔍 Check TypeScript Backend
        run: |
          cd backend
          npx tsc --noEmit

  # ================================
  # Summary Job
  # ================================
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, test, build, typecheck]
    if: always()

    steps:
      - name: ✅ All checks passed
        if: ${{ success() }}
        run: |
          echo "🎉 All CI checks passed successfully!"
          echo "✅ Lint: Passed"
          echo "✅ Tests: Passed"
          echo "✅ Build: Passed"
          echo "✅ TypeCheck: Passed"

      - name: ❌ Some checks failed
        if: ${{ failure() }}
        run: |
          echo "❌ Some CI checks failed. Please review the logs above."
          exit 1
